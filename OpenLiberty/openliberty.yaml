# Declare variables to be passed into your templates.
auth:
  image:
    repository: ibmcase/liberty-auth-spring
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    externalPort: 9080
    internalPort: 9080
    nodePort: 31383
  customer:
    url: http://customer:9080

catalog:
  image:
    repository: ibmcase/liberty-catalog-spring
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    externalPort: 9080
    internalPort: 9080
    nodePort: 31381
  inventory:
    url: http://inventory:9080

customer:
  image:
    repository: ibmcase/liberty-customer-spring
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    externalPort: 9080
    internalPort: 9080
    nodePort: 31382

inventory:
  image:
    repository: ibmcase/liberty-inventory-spring
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    externalPort: 9080
    internalPort: 9080
    nodePort: 31380

orders:
  image:
    repository: ibmcase/liberty-orders-spring
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    externalPort: 9080
    internalPort: 9080
    nodePort: 31384
  mariadb:
    # Leaving empty so it gets name form release name and nameOverride
    host:
    port: 3306
    existingSecret:
    user: dbuser
    password: password
    database: ordersdb

mariadb:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/mariadb
    tag: 10.1.36-debian-9
    pullPolicy: IfNotPresent
  service:
    port: 3306
  rootUser:
    password: admin123
  nameOverride: orders-mariadb
  db:
    user: dbuser
    password: password
    name: ordersdb
  replication:
    enabled: false
  master:
    persistence:
      enabled: false
  slave:
    replicas: 1
    persistence:
      enabled: false

web:
  services:
    auth:
      protocol: http
      host: auth
      port: 9080
    catalog:
      protocol: http
      host: catalog
      port: 9080
    customer:
      protocol: http
      host: customer
      port: 9080
    orders:
      protocol: http
      host: orders
      port: 9080
