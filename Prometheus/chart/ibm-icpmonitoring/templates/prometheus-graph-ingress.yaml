{{- if or (eq .Values.mode "managed") .Values.prometheus.ingress.enabled -}}

# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  labels:
    app: {{ template "prometheus.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: prometheus
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "prometheus.fullname" . }}-graph-ingress
  annotations:
  {{- if .Values.prometheus.ingress.annotations }}
{{ toYaml .Values.prometheus.ingress.annotations | indent 4 }}
  {{- end }}
  {{- if eq .Values.mode "managed" }}
    kubernetes.io/ingress.class: "ibm-icp-management"
    icp.management.ibm.com/authz-type: "rbac"
    icp.management.ibm.com/secure-backends: "true"
    icp.management.ibm.com/secure-client-ca-secret: "{{ template "monitoring.fullname" . }}-client-certs"
    icp.management.ibm.com/location-modifier: "="
    icp.management.ibm.com/upstream-uri: "/graph"
    icp.management.ibm.com/configuration-snippet: |
            header_filter_by_lua_block { ngx.header.content_length = nil }
            body_filter_by_lua_block {
              local data = ngx.arg[1]
              if string.startswith(ngx.header.content_type, 'text/html') then
                data = ngx.re.gsub(data, '="/','="/prometheus/')
                data = ngx.re.gsub(data, 'var PATH_PREFIX = "";','var PATH_PREFIX = "/prometheus";')
              end
              ngx.arg[1] = data
            }
  {{- end }}
spec:
  rules:
  - http:
      paths:
      - path: /prometheus
        backend:
          serviceName: {{ template "prometheus.fullname" . }}
          servicePort: {{ .Values.prometheus.port }}

{{- end -}}
